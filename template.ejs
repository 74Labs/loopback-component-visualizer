<!doctype html>
<html>
<head>
  <title>Visualizer</title>

  <script type="text/javascript" src="http://visjs.org/dist/vis.js"></script>
  <link href="http://visjs.org/dist/vis.css" rel="stylesheet" type="text/css" />

  <style type="text/css">
  body {
    height: 100%;
    margin: 0;
    padding-top: 60px;
    font-family: 'helvetica neue', helvetica, arial, sans-serif;
  }
    #mynetwork {
      width: 100%;
      height: 700px;
      border: 1px solid lightgray;
      margin: 0 auto;
    }
    body #header {
  background-color: #29088A !important;
  position: fixed;
  width: 100%;
  top: 0;
  font-family: 'helvetica neue', helvetica, arial, sans-serif !important;
  color: white;
  font-size: 1.5em;
  font-weight: bold;
  height: 60px;
  padding-top: 10px;
}

body #header a#logo {
  font-size: 1.5em;
    font-weight: bold;
    text-decoration: none;
    color: white;
  padding: 20px 0 20px 60px !important;
}
.black_overlay{
	display: none;
	position: absolute;
	top: 0%;
	left: 0%;
	width: 100%;
	height: 100%;
	background-color: black;
	z-index:1001;
	-moz-opacity: 0.8;
	opacity:.80;
	filter: alpha(opacity=80);
}

.white_content {
	display: none;
	position: absolute;
	top: 25%;
	left: 25%;
	width: 30%;
	height: 50%;
	padding: 20px;
  border-radius: 5px;
	background-color: white;
  font-family: 'helvetica neue', helvetica, arial, sans-serif !important;
	z-index:1002;
	overflow: auto;
}
.close {
  position: absolute;
  top: 20px;
  right: 30px;
  transition: all 200ms;
  font-size: 30px;
  font-weight: bold;
  text-decoration: none;
  color: #333;
}
.close:hover {
  color: #06D85F;
}
  </style>
</head>
<body>
  <div id='header'>
      <div class="swagger-ui-wrap">
          <a id="logo">Visualizer</a>
      </div>
  </div>
<div id="mynetwork"></div>
<script type="text/javascript">
var arr = [];
<%
for(var i in nodes) {
  var node = nodes[i];
  %>
  arr.push({id: <%= node.id %>, label: '<%=node.name%>'});
<%}%>
  // create an array with nodes
  var nodes = new vis.DataSet(arr);
  //
  // // create an array with edges
   var edges = new vis.DataSet(<%- JSON.stringify(edges) %>);

  // create a network
  var container = document.getElementById('mynetwork');
  var data = {
    nodes: nodes,
    edges: edges
  };
  var options = {
  physics: {
    enabled: true,
    repulsion: {
      nodeDistance: 150
    },
    hierarchicalRepulsion: {
      centralGravity: 0.0,
      springLength: 100,
      springConstant: 0.01,
      nodeDistance: 150,
      damping: 0.09
    },
    maxVelocity: 50,
    minVelocity: 0.1,
    solver: 'barnesHut',
    stabilization: {
      enabled: false,
      iterations: 1000,
      updateInterval: 100,
      onlyDynamicEdges: false,
      fit: true
    }
  },
  layout: {
      hierarchical: {
        enabled: true,
        sortMethod: 'directed',
        direction: 'LR'
      }
  },
  nodes: {
    color: '#999999',
    shape: 'box',
    shapeProperties: {
      borderRadius: 0
    },
    physics: false,
    borderWidth: 1,
    font: {
      color: '#343434',
      size: 15, // px
      face: 'arial',
      background: 'none',
      strokeWidth: 0, // px
      strokeColor: '#ffffff',
      align: 'left'
    }
  },
  edges: {
    physics: false,
    arrows: 'to',
    smooth : {
      enabled: false
    }
  }
}
  var network = new vis.Network(container, data, options);
 network.stabilize();
network.on("click", function (params) {
  var nodeArr = <%-JSON.stringify(nodes)%>;
  console.log('params', params.nodes);
  document.getElementById('light').style.display='block';document.getElementById('fade').style.display='block';
  var idx = params.nodes.toString();
  document.getElementById('light').innerHTML = '<h2>'+ nodeArr[idx].name +'</h2>' +
                                               '<a class="close" href="javascript:void(0)" onclick = "document.getElementById(\'light\').style.display=\'none\';document.getElementById(\'fade\').style.display=\'none\'">&times;</a>' +
                                               '<hr>' +
                                               '<h3>Properties of ' + nodeArr[idx].name + '</h3>' +
                                               '<ul><li>' +
                                               nodeArr[idx].props +
                                               '</ul><hr>' +
                                               '<h3> Remote Methods of ' + nodeArr[idx].name + '</h3>' +
                                               '<ul><li>' +
                                               nodeArr[idx].remotes +
                                               '</ul><hr>'
    });

</script>
<div id="light" class="white_content">
</div>
<div id="fade" class="black_overlay"></div>
</body>
</html>
